#+OPTIONS:    H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c)
#+TITLE:      Org Color Themes
#+AUTHOR:     Worg people
#+EMAIL:      mdl AT imapmail DOT org
#+LANGUAGE:   en
#+PRIORITIES: A C B
#+CATEGORY:   worg

# This file is the default header for new Org files in Worg.  Feel free
# to tailor it to your needs.

#+MACRO: screenshot #+HTML: <br style="clear:both;"/><div class="figure"><p><img style="float:center;margin:20px 20px 20px 20px;" width="500px" src="$2"/></p><p><a href="http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/color-themes/$1">$1</a></p></div>

[[file:index.org][{Back to Worg's index}]]

# Contributing Screenshots to this page.
#
# To make an addition to this page
# 1) place your screenshot in the /images/screenshots/ directory in the
#    base of the worg repository -- or not if you'd rather host the
#    image externally
# 2) place your color-theme-*.el file in the /color-themes/ file in the
#    base of the worg repository
# 3) add a macro call like those shown below passing the name of your
#    color theme and the link to your screen-shot respectively to the
#    =screenshot= macro

* Org Colour Themes

#+index: Themes

A popular way of customizing Emacs colours is to use the color-theme
package (see [[http://www.emacswiki.org/emacs/ColorTheme][color-theme emacswiki page]].)

Here is a list of color themes that are aware of Org:
You can see screen shots of these themes [[file:color-themes-screenshot.org][here]]. Once you have
installed a theme it is easy to tweak its appearance by editing the
theme's lisp file.

Some of these themes are available in Worg in the color-themes
directory, whilst others are linked either to the author's site, or to Github.

There is a page with screenshots of each of the themes [[file:color-themes-screenshot.org][here]] .

** [[http://www.emacswiki.org/emacs/zenburn.el][color-theme-zenburn.el]] (maintained by Daniel Brockman)
** [[http://jaderholm.com/color-themes/color-theme-colorful-obsolescence.el][color-theme-colorful-obsolescence.el]] (Scott Jaderholm)

Links to Scott's themes all point directly to his site.
** [[http://jaderholm.com/color-themes/color-theme-wombat.el][color-theme-wombat.el]] (Scott Jaderholm)

** [[http://jaderholm.com/color-themes/color-theme-active.el][color-theme-active.el]] (Scott Jaderholm)

** [[https://github.com/fniessen/color-theme-leuven][color-theme-leuven.el]] (Fabrice Niessen)

** [[file:color-themes/color-theme-zenburn.el][color-theme-zenburn.el]] (Daniel Brockman Adrian C., Bastien Guerry)

** [[file:color-themes/color-theme-tangotango.el][color-theme-tangotango.el]] (Julien Barnier)
[[http://blog.nozav.org/post/2010/07/12/Updated-tangotango-emacs-color-theme][Link]] to Julien's blog post about tangotango. [[http://github.com/juba/color-theme-tangotango][Link]] to the Github repository.

** [[file:color-themes/color-theme-folio.el][color-theme-folio.el]] color-theme-folio.el (David O'Toole)

** [[file:color-themes/color-theme-manoj.el][color-theme-manoj.el]] (maintained by [[http://www.golden-gryphon.com/blog/manoj/blog/2008/05/26/Theming_Emacs/][Memnon]])

** [[file:color-themes/color-theme-zenash.el][color-theme-zenash.el]] (maintained by Yavuz Arkun)
A modified version of zenburn. [[http://github.com/yarkun/zenash][Link]] to the Github repository.

** [[http://github.com/suvayu/.emacs.d/blob/master/lisp/color-theme-dark-emacs.el][color-theme-dark-emacs.el]] (maintained by Suvayu Ali)
Based on theme made by the emacswiki user, ZWZ. The original theme can
be found [[http://www.emacswiki.org/emacs/zwz][here]]. Suvayu has also made some org-mode font modifications
outside of the colour theme, which can be obtained [[http://github.com/suvayu/.emacs.d/blob/master/lisp/org-mode-settings.el][here]]. Suvayu's
[[http://github.com/suvayu/.emacs.d/blob/master/init.el][init.el]] gives more information on how to use his customizations.

/NB:/ This theme is not maintained anymore, and won't work with the
trunk version of Emacs 24.1. Emacs 24.1 removes support for the
deprecated 3rd argument form for =face-spec-set=. This breaks the
=color-theme= package in general; so instead of waiting for it to be
fixed, ~dark-emacs~ is now available as an Emacs 24 custom theme. The
latest version can be found [[http://github.com/suvayu/.emacs.d/blob/master/themes/dark-emacs-theme.el][here]].

** [[https://github.com/n3mo/cyberpunk-theme.el][cyberpunk-theme.el]] (Nick Van Horn)
Cyberpunk color theme for the emacs 24+ built-in color theme support
known loosely as deftheme. The theme is mostly a direct port of the
overtone/emacs-live theme of the same name (designed originally for
the color-theme package). Many mode-specific customizations,
particularly with respect to org-mode, have also been added.

** Installing Org Colour Themes.
First make sure that you have the Emacs color-theme package
installed. Copy the lisp files for the themes into a directory in your
Emacs load path.

If you want to be able to easily cycle between different
colour schemes, you need something like the following in your .emacs:

#+BEGIN_SRC emacs-lisp
(require 'color-theme)
(setq color-theme-is-global t)
(color-theme-initialize)

(load "color-theme-colorful-obsolescence")
(load "color-theme-zenburn")
(load "color-theme-tangotango")
(load "color-theme-railscast")
(load "color-theme-leuven")
(load "color-theme-folio")
(load "color-theme-zenash")
(load "color-theme-manoj")

(setq my-color-themes (list
  'color-theme-tangotango
  'color-theme-colorful-obsolescence 'color-theme-zenburn
  'color-theme-leuven 'color-theme-folio 
  'color-theme-manoj 'color-theme-zenash
  'color-theme-railscast
))

(defun my-theme-set-default () ; Set the first row
      (interactive)
      (setq theme-current my-color-themes)
      (funcall (car theme-current)))
     
    (defun my-describe-theme () ; Show the current theme
      (interactive)
      (message "%s" (car theme-current)))
     
   ; Set the next theme (fixed by Chris Webber - tanks)
    (defun my-theme-cycle ()		
      (interactive)
      (setq theme-current (cdr theme-current))
      (if (null theme-current)
      (setq theme-current my-color-themes))
      (funcall (car theme-current))
      (message "%S" (car theme-current)))
    
    (setq theme-current my-color-themes)
    (setq color-theme-is-global nil) ; Initialization
    (my-theme-set-default)
    (global-set-key [f4] 'my-theme-cycle)
  
#+END_SRC

Now you can cycle through the installed themes using the F4 key.

