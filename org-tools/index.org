#+STARTUP:    align fold nodlcheck hidestars oddeven intestate
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c)
#+TITLE:      Org Mode tools!
#+AUTHOR:     Worg people
#+EMAIL:      mdl AT imapmail DOT org
#+LANGUAGE:   en
#+PRIORITIES: A C B
#+CATEGORY:   worg
#+OPTIONS:    H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc

This page lists external tools useful for handling Org files.

* orgnode.py - python library for parsing Org files

- Author: Charles Cave
- Homepage: http://members.optusnet.com.au/~charles57/GTD/orgnode.html

: The Orgnode module contains one class, called Orgnode and a routine to read
: an org-mode file and create a list of Orgnode objects.
: 
: The module is for reading an org-mode file. There are no methods for
: writing org-mode since since I have no need for this functionality.
: 
: You are welcome to extend the functionality of the __repr__ method of the
: Orgnode class if you would like this functionality.
* PyOrgMode - python library for creating and parsing Org files

- Author: Jonathan Bisson (on gmail : bissonjonathan)
- Homepage: https://github.com/bjonnh/PyOrgMode

: This python module allows for the creation and parsing of org-files. The
: org-files are loaded into python objects allowing the modification of the
: different recognized elements.
: 
: The objects are defined in a plug-in way, allowing the user of this
: module to add easily a new kind of data and the relative functions.
: 
: Current objects are : 
: - Schedule elements
: - Drawers
: - Tables
: - Nodes
: 
: The project is contained in an unique tangle org-file which contains the
: documentation, the python files and the test suite.
* orgutil - TCL script to manipulate org files

- Author: Patrick Brennan
- Homepage: http://sourceforge.net/projects/orgutil/

: Script for converting files into and out of Org-mode, and for performing
: various analyses and conversions. The primary use case for this utility is
: to convert between Org-mode outline text and AbstractSpoon's ToDoList.

* ical2org.awk - convert ics files to Org

- Author: Eric S Fraga
- Code: [[file:../code/awk/ical2org.awk][ical2org.awk]]

See [[file:../org-tutorials/org-google-sync.org][the org-google-sync tutorial]] for explanations on how to use this
script.

* org2remind - perl script to convert org appointments to remind

 - Author: Matt Lundin
 - Code: [[file:../code/perl/org2remind][org2remind]]

Remind is a command line calendar application for Unix/Linux that
can, among other things, spit out formatted plain text calendars and
agendas.

http://www.roaringpenguin.com/products/remind

To convert org-mode appointments to remind data, simply call the
script on one or more org files:

: perl org2remind ~/org/*.org

(Optionally, add the script to your path and make it executable.)

The results of this script can saved in a file...

: perl org2remind.pl ~/org/*.org >> org.rem 

...or piped directly into a remind command...

: perl org2remind ~/org/*.org | remind -

For a nice calendar of the current month, use the following: 

: perl org2remind ~/org/*.org | remind -c -

This script is similar to org2rem.el (in the contrib directory of the
org-mode repository), except that, instead of saving files from within
org-mode, it allows for easier and faster access to org/remind data
from the command line.

Currently, the script supports appointments (i.e., active timestamps)
and the org-diary-class sexp.
