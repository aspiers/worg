#+OPTIONS:    H:3 num:nil toc:1 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:nil skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) 
#+TITLE:      Babel: Uses
#+AUTHOR:     Thomas S. Dye
#+EMAIL:      tsd at tsdye dot com
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>
#+STYLE:      <style type="text/css">#table-of-contents{ max-width:100%; }</style>
#+LINK_UP:  index.php
#+LINK_HOME: http://orgmode.org/worg/

* Introduction
  This page collects examples of using Babel in a variety of
  contexts. Contributions of further examples from Babel users are
  very welcome.

* [[file:examples/data-collection-analysis.org][Data Collection and Analysis]]
  (raw file available at [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/data-collection-analysis.org][data-collection-analysis.org]])

  This example uses Babel to automate a repeated data-collection
  and analysis task.  A Ruby code block is used to scrape data from
  the output of a computational experiment.  This data is then written
  to an Org-mode table.  A block of R code reads from this table and
  calculates lines of fit.  Finally a block of gnuplot code is used to
  graph the results of both the raw data and the R analysis.  By
  performing all of these steps within an Org-mode document working
  notes, discussion, and TODOs can be naturally interspersed with the
  code, and the results can easily be published to HTML or PDF for
  distribution.

* [[file:examples/research-project.org][A Research Project]]
  (raw file available at [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/research-project.org][research-project.org]])
  
  A research project typically produces one or more documents that
  describe or rely upon:
  - a data collection
  - computations and code used in data analysis or simulation
  - methodological conventions and assumptions
  - decisions among alternate analytic paths

  The documents produced by a research project typically stand apart
  from the things they describe and rely upon, which makes it
  difficult for other researchers to understand fully or to reproduce
  the results of the research project.
 
  A software solution to this problem was proposed by Gentleman and
  Temple Lang, who "introduce the concept of a /compendium/ as both a
  container for the different elements that make up the document and
  its computations (i.e. text, code, data, ...), and as a means for
  distributing, managing and updating the collection."

  Babel and Org-mode provide the tools needed to create a
  compendium in one Org-mode file.  This example is taken from a work
  in progress, one that has seen many changes in structure and
  organization.  No claim is made that it is the best way to do
  things.  But it works and is proving extremely useful in the conduct
  of the research project.

* [[http://www.stats.ox.ac.uk/~davison/software/org-babel/drift.org.html][Teaching evolution using R]]
  This example is a tutorial on simulating evolution in R. It contains
  examples of diagrams generated with =ditaa=, LaTeX, and graphics
  generated with R.

  A good way to see how org-babel functions to create the tutorial is
  to view the [[http://www.stats.ox.ac.uk/~davison/software/org-babel/drift.org.html][htmlized org buffer]]. This also provides an example of
  how images and latex-generated mathematical notation can be viewed
  inline in emacs. The HTML export version is [[file:examples/drift.org][here]].

* [[file:examples/org-check.org][Checking Your Org-Mode Configuration]]
  (raw file available at [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/org-check.org][org-check.org]])

  This example runs some diagnostic checks to see if your system and
  Org-mode are configured to accomplish various tasks.  It is
  currently a stub placed here in the hope that the Org-mode community
  will augment and enhance it.  It was created in response to a thread
  on the mailing list on how to ease the learning curve for new
  Org-mode users.

* [[file:examples/latex-form.org][A LaTeX Form]]
  (raw file available at [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/latex-form.org][latex-form.org]])

  This example uses Babel as a user interface for a LaTeX form
  that might be used by the members of an organization.  It uses the
  literate programming facility of Babel to isolate the user from
  the sometimes arcane LaTeX constructs needed to create a
  highly-structured form.  Babel can tangle multiple documents in
  a single Org-mode file, and this ability is used to create a
  distribution version of the form separate from one designed for the
  file cabinet.

* [[file:examples/short-report.org][A Standardized Short Report]]
  (raw file available at [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/short-report.org][short-report.org]])

  This example is similar to the previous one, but here the users are
  expected to write substantial content.  This type of workflow might
  be used by a small organization whose employees regularly produce
  standard documents and where the writing tasks for any one document
  are divided among the authors.  

  The HTML export facility of Org-mode is used to produce a guide to
  writing the standardized short report.  This HTML file can be used
  to train new authors.  The Org-mode content also supplies
  substantial direction to experienced authors as they write.
  Org-mode keywords and tags are used to keep track of writing
  assignments and progress.  Babel's literate programming facility
  makes it possible to present writing tasks to the authors in an order
  different from which they appear in the report.

* [[file:examples/ascii.org][A Example Using Ascii Package]]
  (raw file available at [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/ascii.org][ascii.org]])

  This example shows how to use Babel with =R= and =ascii= package.

* [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/foo.org.html][/An Babel Demo/ -- A Comparison to Sweave]]
  :PROPERTIES:
  :CUSTOM_ID: foo
  :END:
[[http://www.stat.umn.edu/~charlie/][Charlie Geyer]] created an excellent short demonstration of Sweave
entitled /An Sweave Demo/ available at [[http://www.stat.umn.edu/~charlie/Sweave/][his Sweave page]].  There is now
an Babel version of this demonstration entitled /An Babel
Demo/ which matches Charlie's document word for word (as much as
possible) and figure for figure with all the examples implemented
using Babel instead of Sweave.

Compare the two side-by-side.
|        | source                                  | pdf     |
|--------+-----------------------------------------+---------|
| Sweave | [[http://www.stat.umn.edu/~charlie/Sweave/foo.Rnw][foo.Rnw]]                                 | [[http://www.stat.umn.edu/~charlie/Sweave/foo.pdf][foo.pdf]] |
| Babel  | [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/foo.org][foo.org]] ([[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/foo.org.html][foo.org.html]] as seen in Emacs) | [[http://repo.or.cz/w/Worg.git/blob_plain/HEAD:/org-contrib/babel/examples/foo.pdf][foo.pdf]] |

* [[file:examples/finances.org][Tracking finances]]
:PROPERTIES:
:Author: Jason Dunsmore
:CUSTOM_ID: tracking-finances
:END:

An Emacs lisp function in a Babel source block aggregates entries in
an Org-mode table, which can be useful in tracking finances.
 
* Using Ledger for tracking finances

Instead of using org directly, we can use ledger for tracking
finances.  A [[file:examples/ledger.org][short tutorial]] is available which illustrates how ledger
entries can be inserted in an org file and org-babel used to generate
financial reports.
