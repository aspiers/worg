#+OPTIONS:    H:3 num:nil toc:2 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+TITLE:      Using C and makefile code with org-babel
#+AUTHOR:     Worg People
#+EMAIL:      schulte.eric at gmail dot com, davison at stats dot ox dot ac dot uk
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>

* Introduction
Org babel allows for evaluation of C and C++ code.  As opposed to
interpreted languages which can be evaluated directly, C code is first
compiled to an executable which is then run.  If a =main= method is
not present in a code block then the entire block is wrapped in a
trivial =main= function call.

So for example the following simple code block can be evaluated
yielding the results shown.
: #+begin_src c++ :includes <stdio.h>
:   int a=1;
:   int b=1;
:   printf("%d\n", a+b);
: #+end_src
: 
: #+results:
: : 2
