#+OPTIONS:    H:3 num:nil toc:2 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+TITLE:      Using gnuplot with Babel
#+AUTHOR:     John Hendy
#+EMAIL:      
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>

#+begin_html
  <div id="subtitle" style="float: center; text-align: center;">
  <p>
  Org-babel support for
  <a href="http://gnuplot.org/">Gnuplot</a>
  </p>
  <p>
  <!-- fixme: need working links and images -->
  <a href="http://gnuplot.org/">
  <img src="gnuplot-image"/>
  </a>
  </p>
  </div>
#+end_html

* Introduction
Gnuplot code can be executed directly from within embedded code blocks
in Org-mode documents.  These code blocks can access tabular data
stored in the documents, and can include their output as embedded
graphics in the documents.

The following provides instructions and example usage (/pending/)...
