#+OPTIONS:    H:3 num:nil toc:2 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+TITLE:      ob-mscgen
#+AUTHOR:     Juan Pechiar
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>

#+begin_html
  <div id="subtitle" style="float: center; text-align: center;">
  <p>
  Org-babel support for
  <a href="http://www.mcternan.me.uk/mscgen/">Mscgen</a>: Message sequence charts
  </p>
  </div>
#+end_html

* Introduction

Mscgen is a utility for rendering message sequence charts.

The charts are defined in text format as specified on the [[http://www.mcternan.me.uk/mscgen/][project homepage]].

This org-babel module is similar to ob-dot and ob-ditaa in that they
just render an image from a text-based definition. Therefore many of
the org-babel concetps do not apply (things like sessions, variables,
vector output).

* Requirements

ob-mscgen requires mscgen installed on your system and accessible on
emacs path setting (exec-path).

* Enabling ob-mscgen

You need to add mscgen to the org-babel-load-languages setting.

Customize thus:

: M-x customize-variable RET org-babel-load-languages RET

* Example usage

The following is a trivial example of 2 messages between nodes A and B:

: #+begin_src mscgen :file chart.png
: msc {
:   A,B;
:   A -> B [ label = "send message" ];
:   A <- B [ label = "receive answer" ];
: }
: #+end_src

Which produces the following result:

#+begin_html
<img src="../../../images/babel/sequencechart.png" alt="message sequence chart" />
#+end_html

* Header arguments

The following header arguments are relevant for ob-mscgen:
   - file :: the file argument is needed since mscgen's output is always to a file.
   - filetype :: optional file type, defaults to PNG.

Supported file types (as of 2010W30) are:
   - PNG (Portable Network Graphics) - default
   - SVG (Scalable Vector Graphics)
   - EPS (encapsulated PostScript)
   - ismap (server-side image map)

PNG results in a bitmap image, but it is supported in all export formats (i.e. by web browsers and by pdflatex).

Other formats may result in a link to the actual file.

In order to get higher resoultion on PNG output, include a =width= or =hscale= statement.
