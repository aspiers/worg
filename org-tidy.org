#+TITLE:      Suggestions to keep your org-files tidy
#+AUTHOR:     Worg people
#+OPTIONS:    H:3 num:nil toc:t \n:nil ::t |:t ^:t -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c)
#+LANGUAGE:   en
#+PRIORITIES: A C B
#+CATEGORY:   worg

# This file is the default header for new Org files in Worg.  Feel free
# to tailor it to your needs.

[[file:index.org][{Back to Worg's index}]]

This page collects suggestions and practices to keep your org files
tidy.  Consider this, when need arises or simply when you feel like
cleaning up.

* org-id-cleanup: Cleaning up IDs from org-id

You already know org-id, which comes as a part of org: It can add
unique IDs to your Org-nodes, which can be used in links and allow
easy navigation within org.

Now, if a user tends to delete those links without deleting the IDs,
unused IDs (with no link pointing at them) will be left over.

In general this is not a problem for org-id and no intervention is
required. However, if the user produces hundreds or thousands of such
unreferenced IDs, this might eventually start to slow down org-id.

In such a situation [[https://github.com/marcIhm/org-id-cleanup][org-id-cleanup]] may come in handy. It provides an
interactive assistant, that will guide you through the process of
finding and eventually deleting such unused IDs. You may bail out at
any step, if you change you mind. And as a safety-net a log of removed
IDs will written to disk.

org-id-cleanup is available at [[https://melpa.org/#/org-id-cleanup][melpa]].
