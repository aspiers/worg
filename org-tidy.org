#+TITLE:      Suggestions to keep your org-files tidy
#+AUTHOR:     Worg people
#+OPTIONS:    H:3 num:nil toc:t \n:nil ::t |:t ^:t -:t f:t *:t tex:t d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c)
#+LANGUAGE:   en
#+PRIORITIES: A C B
#+CATEGORY:   worg

# This file is the default header for new Org files in Worg.  Feel free
# to tailor it to your needs.

[[file:index.org][{Back to Worg's index}]]

This page collects suggestions and practices to keep your org files
tidy.  Consider this, when need arises or simply when you feel like
cleaning up.

* Archiving: Moving away nodes, that are no longer used

Filing away content that is no longer needed, is probably the most
effective way to cleanup and tidy your org files: Have a look at 
[[file:org-hacks.org::#archiving][archiving]].

* Cleaning up Org-Metadata

Tags and properties are examples for Org data, that is not only read
by users is also processed by org itself. Because of that it is also
possible for Org to find and remove unused pieces of metadata:

- [[file:org-hacks.org::#remove-redundant-tags][Remove redundant tags]]
- [[file:org-hacks.org::#remove-empty-property-drawers][Remove empty property drawers]]
- [[file:org-hacks.org::#check-for-misplaced-timestamps][Make sure, that timestamps for scheduled and deadline are placed correctly]]
- [[file:org-tidy.org::#clean-up-ids][Clean up IDs from org-id]]
 
** org-id-cleanup: Cleaning up IDs from org-id
  :PROPERTIES:
  :CUSTOM_ID: clean-up-ids
  :END:
#+index: id!clean
You already know org-id which comes as a part of org: It allows to
add unique IDs to your Org-nodes, which e.g. are used in
links and allow easy navigation within org.

Now, if a user tends to delete those links without deleting the IDs
the links refer to, unused IDs (with no link pointing at them) will be
left over.

In general this is not a problem for org-id and no intervention is
required. However, if the user produces hundreds or thousands of such
unreferenced IDs, this might eventually start to slow down org-id,
especially its function org-id-update-id-locations.

In such a situation [[https://github.com/marcIhm/org-id-cleanup][org-id-cleanup]] may come in handy. It provides an
interactive assistant, that will guide you through the process of
finding and eventually deleting such unused IDs. You may think of this
process as "cleaning up IDs from org-id"; whence the name.

Org-id-cleanup can be tried whithout hesitation: Before each step it
gives detailed information, so that you may bail out at will. And as a
safety-net a log of removed IDs is written to disk.

org-id-cleanup is available at [[https://melpa.org/#/org-id-cleanup][melpa]].
* Tidy or repair other elements of org

- [[file:org-hacks.org::#align-tables-in-file][Make sure, that all tables in a file are formatted correctly]]
- [[https://github.com/alphapapa/unpackaged.el#ensure-blank-lines-between-headings-and-before-contents][Ensure blank lines between headings and before contents]]
- [[file:org-tools/index.org::#fix-links][This might help to repair broken links]]

