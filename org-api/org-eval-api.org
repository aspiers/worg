#+OPTIONS:    H:3 num:nil toc:2 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+TITLE:      Org API
#+AUTHOR:     Thorsten Jolitz
#+EMAIL:      tjolitz [at] gmail [dot] com
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>
#+LINK_UP:    index.html
#+LINK_HOME:  http://orgmode.org/worg/
#+EXPORT_EXCLUDE_TAGS: noexport

* Org-Eval API functions (org-eval.el)
** org-eval =form=

Eval =form= and return result.


** org-eval-handle-snippets =limit &optional replace=

Evaluate code snippets and display the results as display property.
When =replace= is non-nil, replace the code region with the result (used
for export).


** org-eval-in-calendar =form &optional keepdate=

Eval =form= in the calendar window and return to current window.
When =keepdate= is non-nil, update /org-ans2/ from the cursor date,
otherwise stick to the current value of /org-ans2/.


** org-eval-light-current-snippet =&optional arg=

Execute the current #+begin_src #+end_src block, and dump the
results into the buffer immediately following the src block,
commented by /org-eval-light-make-region-example/.


** org-eval-light-eval-subtree =&optional arg=

Replace EVAL snippets in the entire subtree.


** org-eval-light-lisp =form=

Evaluate the given form and return the result as a string.


** org-eval-light-make-region-example =beg end=

Comment out region using either the '^:' or the =beg=IN_EXAMPLE
syntax based on the size of the region as compared to
/org-eval-light-example-size-cutoff/.


** org-eval-lisp =form=

Evaluate the given form and return the result as a string.


** org-eval-replace-snippts  

Replace EVAL snippets in the entire buffer.
This should go into the /org-export-preprocess-hook/.


** org-evaluate-time-range =&optional to-buffer=

Evaluate a time range by computing the difference between start and end.
Normally the result is just printed in the echo area, but with prefix arg
=to-buffer=, the result is inserted just after the date stamp into the buffer.
If the time range is actually in a table, the result is inserted into the
next column.
For time difference computation, a year is assumed to be exactly 365
days in order to avoid rounding problems.
