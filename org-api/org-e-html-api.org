#+OPTIONS:    H:3 num:nil toc:2 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+TITLE:      Org API
#+AUTHOR:     Thorsten Jolitz
#+EMAIL:      tjolitz [at] gmail [dot] com
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>
#+LINK_UP:    index.html
#+LINK_HOME:  http://orgmode.org/worg/
#+EXPORT_EXCLUDE_TAGS: noexport


* Org-E-HTML API functions (org-e-html.el)
** org-e-html-bibliography  g

Find bibliography, cut it out and return it.


** org-e-html-bold =bold contents info=

Transcode =bold= from Org to HTML.
=contents= is the text with bold markup.  =info= is a plist holding
contextual information.


** org-e-html-center-block =center-block contents info=

Transcode a =center-block= element from Org to HTML.
=contents= holds the contents of the block.  =info= is a plist
holding contextual information.


** org-e-html-clock =clock contents info=

Transcode a =clock= element from Org to HTML.
=contents= is nil.  =info= is a plist used as a communication
channel.


** org-e-html-code =code contents info=

Transcode =code= from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual
information.


** org-e-html-convert-special-strings =string=

Convert special characters in =string= to HTML.


** org-e-html-cvt-org-as-html =opt-plist type path=

Convert an org filename to an equivalent html filename.
If =type= is not file, just return /nil/.
See variable /org-e-html-link-org-files-as-html/.


** org-e-html-drawer =drawer contents info=

Transcode a =drawer= element from Org to HTML.
=contents= holds the contents of the block.  =info= is a plist
holding contextual information.


** org-e-html-dynamic-block =dynamic-block contents info=

Transcode a =dynamic-block= element from Org to HTML.
=contents= holds the contents of the block.  =info= is a plist
holding contextual information.  See /org-export-data/.


** org-e-html-encode-plain-text =s=

Convert plain text characters to HTML equivalent.
Possible conversions are set in /org-export-html-protect-char-alist/.


** org-e-html-entity =entity contents info=

Transcode an =entity= object from Org to HTML.
=contents= are the definition itself.  =info= is a plist holding
contextual information.


** org-e-html-example-block =example-block contents info=

Transcode a =example-block= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-export-block =export-block contents info=

Transcode a =export-block= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-export-snippet =export-snippet contents info=

Transcode a =export-snippet= object from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-export-to-html =&optional subtreep visible-only body-only ext-plist pub-dir=

Export current buffer to a HTML file.

If narrowing is active in the current buffer, only export its
narrowed part.

If a region is active, export that region.

When optional argument =subtreep= is non-nil, export the sub-tree
at point, extracting information from the headline properties
first.

When optional argument =visible-only= is non-nil, don't export
contents of hidden elements.

When optional argument =body-only= is non-nil, only write code
between "\begin{document}" and "\end{document}".

=ext-plist=, when provided, is a property list with external
parameters overriding Org default settings, but still inferior to
file-local settings.

When optional argument =pub-dir= is set, use it as the publishing
directory.

Return output file's name.


** org-e-html-fix-class-name =kwd=

Turn todo keyword into a valid class name.
Replaces invalid characters with "_".


** org-e-html-fixed-width =fixed-width contents info=

Transcode a =fixed-width= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-footnote-reference =footnote-reference contents info=

Transcode a =footnote-reference= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-format-org-link =opt-plist type-1 path fragment desc attr descp=

Make an HTML link.
=opt-plist= is an options list.
TYPE is the device-type of the link (THIS://foo.html).
=path= is the path of the link (http://THIS#location).
=fragment= is the fragment part of the link, if any (foo.html#THIS).
=desc= is the link description, if any.
=attr= is a string of other attributes of the "a" element.


** org-e-html-headline =headline contents info=

Transcode an =headline= element from Org to HTML.
=contents= holds the contents of the headline.  =info= is a plist
holding contextual information.


** org-e-html-horizontal-rule =horizontal-rule contents info=

Transcode an =horizontal-rule=  object from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-inline-src-block =inline-src-block contents info=

Transcode an =inline-src-block= element from Org to HTML.
=contents= holds the contents of the item.  =info= is a plist holding
contextual information.


** org-e-html-inlinetask =inlinetask contents info=

Transcode an =inlinetask= element from Org to HTML.
=contents= holds the contents of the block.  =info= is a plist
holding contextual information.


** org-e-html-italic =italic contents info=

Transcode =italic= from Org to HTML.
=contents= is the text with italic markup.  =info= is a plist holding
contextual information.


** org-e-html-item =item contents info=

Transcode an =item= element from Org to HTML.
=contents= holds the contents of the item.  =info= is a plist holding
contextual information.


** org-e-html-keyword =keyword contents info=

Transcode a =keyword= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-latex-environment =latex-environment contents info=

Transcode a =latex-environment= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-latex-fragment =latex-fragment contents info=

Transcode a =latex-fragment= object from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-line-break =line-break contents info=

Transcode a =line-break= object from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-link =link desc info=

Transcode a =link= object from Org to HTML.

=desc= is the description part of the link, or the empty string.
=info= is a plist holding contextual information.  See
/org-export-data/.


** org-e-html-macro =macro contents info=

Transcode a =macro= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-mathjax-config =info=

Insert the user setup into the matchjax template.


** org-e-html-paragraph =paragraph contents info=

Transcode a =paragraph= element from Org to HTML.
=contents= is the contents of the paragraph, as a string.  =info= is
the plist used as a communication channel.


** org-e-html-plain-list =plain-list contents info=

Transcode a =plain-list= element from Org to HTML.
=contents= is the contents of the list.  =info= is a plist holding
contextual information.


** org-e-html-plain-text =text info=

Transcode a =text= string from Org to HTML.
=text= is the string to transcode.  =info= is a plist holding
contextual information.


** org-e-html-planning =planning contents info=

Transcode a =planning= element from Org to HTML.
=contents= is nil.  =info= is a plist used as a communication
channel.


** org-e-html-property-drawer =property-drawer contents info=

Transcode a =property-drawer= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual
information.


** org-e-html-quote-block =quote-block contents info=

Transcode a =quote-block= element from Org to HTML.
=contents= holds the contents of the block.  =info= is a plist
holding contextual information.


** org-e-html-quote-section =quote-section contents info=

Transcode a =quote-section= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-radio-target =radio-target text info=

Transcode a =radio-target= object from Org to HTML.
=text= is the text of the target.  =info= is a plist holding
contextual information.


** org-e-html-section =section contents info=

Transcode a =section= element from Org to HTML.
=contents= holds the contents of the section.  =info= is a plist
holding contextual information.


** org-e-html-special-block =special-block contents info=

Transcode a =special-block= element from Org to HTML.
=contents= holds the contents of the block.  =info= is a plist
holding contextual information.


** org-e-html-splice-attributes =tag attributes=

Read attributes in string =attributes=, add and replace in HTML tag =tag=.


** org-e-html-src-block =src-block contents info=

Transcode a =src-block= element from Org to HTML.
=contents= holds the contents of the item.  =info= is a plist holding
contextual information.


** org-e-html-standalone-image-p =element info &optional predicate=

Test if =element= is a standalone image for the purpose HTML export.
=info= is a plist holding contextual information.

Return non-nil, if =element= is of type paragraph and it's sole
content, save for whitespaces, is a link that qualifies as an
inline image.

Return non-nil, if =element= is of type link and it's containing
paragraph has no other content save for leading and trailing
whitespaces.

Return nil, otherwise.

Bind /org-e-html-standalone-image-predicate/ to constrain
paragraph further.  For example, to check for only captioned
standalone images, do the following.

#+begin_src emacs-lisp
  (setq org-e-html-standalone-image-predicate
#+end_src
	(lambda (paragraph)
	  (org-element-property :caption paragraph)))



** org-e-html-statistics-cookie =statistics-cookie contents info=

Transcode a =statistics-cookie= object from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-strike-through =strike-through contents info=

Transcode =strike-through= from Org to HTML.
=contents= is the text with strike-through markup.  =info= is a plist
holding contextual information.


** org-e-html-subscript =subscript contents info=

Transcode a =subscript= object from Org to HTML.
=contents= is the contents of the object.  =info= is a plist holding
contextual information.


** org-e-html-superscript =superscript contents info=

Transcode a =superscript= object from Org to HTML.
=contents= is the contents of the object.  =info= is a plist holding
contextual information.


** org-e-html-table =table contents info=

Transcode a =table= element from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual information.


** org-e-html-table-cell =table-cell contents info=

Transcode a =table-cell= element from Org to HTML.
=contents= is nil.  =info= is a plist used as a communication
channel.


** org-e-html-table-row =table-row contents info=

Transcode a =table-row= element from Org to HTML.
=contents= is the contents of the row.  =info= is a plist used as a
communication channel.


** org-e-html-target =target contents info=

Transcode a =target= object from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual
information.


** org-e-html-template =contents info=

Return complete document string after HTML conversion.
=contents= is the transcoded contents string.  RAW-DATA is the
original parsed data.  =info= is a plist holding export options.


** org-e-html-timestamp =timestamp contents info=

Transcode a =timestamp= object from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual
information.


** org-e-html-underline =underline contents info=

Transcode =underline= from Org to HTML.
=contents= is the text with underline markup.  =info= is a plist
holding contextual information.


** org-e-html-verbatim =verbatim contents info=

Transcode =verbatim= from Org to HTML.
=contents= is nil.  =info= is a plist holding contextual
information.


** org-e-html-verse-block =verse-block contents info=

Transcode a =verse-block= element from Org to HTML.
=contents= is verse block contents.  =info= is a plist holding
contextual information.
