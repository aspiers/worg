#+OPTIONS:    H:3 num:nil toc:2 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+TITLE:      Org API
#+AUTHOR:     Thorsten Jolitz
#+EMAIL:      tjolitz [at] gmail [dot] com
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>
#+LINK_UP:    index.html
#+LINK_HOME:  http://orgmode.org/worg/
#+EXPORT_EXCLUDE_TAGS: noexport


* Org-Expiry API functions (org-expiry.el)
** org-expiry-add-keyword =&optional keyword=

Add =keyword= to the entry at point if it is expired.


** org-expiry-archive-subtree  

Archive the entry at point if it is expired.


** org-expiry-deinsinuate =&optional arg=

Remove hooks and deactivate advices for org-expiry.
If =arg=, also remove org-expiry hook in Org's /before-save-hook/
and restart /org-mode/ if necessary.


** org-expiry-expired-p  

Check if the entry at point is expired.
Return nil if the entry is not expired.  Otherwise return the
amount of time between today and the expiry date.

If there is no creation date, use /org-expiry-created-date/.
If there is no expiry date, use /org-expiry-expiry-date/.


** org-expiry-insert-created =&optional arg=

Insert or update a property with the creation date.
If =arg=, always update it.  With one /C-u/ prefix, silently update
to today's date.  With two /C-u/ prefixes, prompt the user for to
update the date.


** org-expiry-insert-expiry =&optional today=

Insert a property with the expiry date.
With one /C-u/ prefix, don't prompt interactively for the date
and insert today's date.


** org-expiry-insinuate =&optional arg=

Add hooks and activate advices for org-expiry.
If =arg=, also add a hook to /before-save-hook/ in /org-mode/ and
restart /org-mode/ if necessary.


** org-expiry-process-entries =beg end=

Process all expired entries between =beg= and =end=.
The expiry process will run the function defined by
/org-expiry-handler-functions/.


** org-expiry-process-entry =&optional force=

Call /org-expiry-handler-function/ on entry.
If =force= is non-nil, don't require confirmation from the user.
Otherwise rely on /org-expiry-confirm-flag/ to decide.
