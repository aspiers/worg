#+OPTIONS:    H:3 num:nil toc:2 \n:nil @:t ::t |:t ^:{} -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate hideblocks
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) noexport(n)
#+TITLE:      Org API
#+AUTHOR:     Thorsten Jolitz
#+EMAIL:      tjolitz [at] gmail [dot] com
#+LANGUAGE:   en
#+STYLE:      <style type="text/css">#outline-container-introduction{ clear:both; }</style>
#+LINK_UP:    index.html
#+LINK_HOME:  http://orgmode.org/worg/
#+EXPORT_EXCLUDE_TAGS: noexport

* Org-Feed API functions (org-feed.el)
** org-feed-add-items =pos entries=

Add the formatted items to the headline as =pos=.


** org-feed-format-entry =entry template formatter=

Format =entry= so that it can be inserted into an Org file.
=entry= is a property list.  This function adds a /:formatted-for-org/ property
and returns the full property list.
If that property is already present, nothing changes.


** org-feed-get-feed =url=

Get the RSS feed file at =url= and return the buffer.


** org-feed-goto-inbox =feed=

Go to the inbox that captures the feed named =feed=.


** org-feed-goto-inbox-internal =file heading=

Find or create =heading= in =file=.
Switch to that buffer, and return the position of that headline.


** org-feed-make-indented-block =s n=

Add indentation of =n= spaces to a multiline string =s=.


** org-feed-parse-atom-entry =entry=

Parse the /:item-full-text/ as a sexp and create new properties.


** org-feed-parse-atom-feed =buffer=

Parse =buffer= for Atom feed entries.
Returns a list of entries, with each entry a property list,
containing the properties /:guid/ and /:item-full-text/.

The /:item-full-text/ property actually contains the sexp
formatted as a string, not the original XML data.


** org-feed-parse-rss-entry =entry=

Parse the /:item-full-text/ field for xml tags and create new properties.


** org-feed-parse-rss-feed =buffer=

Parse =buffer= for RSS feed entries.
Returns a list of entries, with each entry a property list,
containing the properties /:guid/ and /:item-full-text/.


** org-feed-read-previous-status =pos drawer=

Get the alist of old GUIDs from the entry at =pos=.
This will find =drawer= and extract the alist.


** org-feed-show-raw-feed =feed=

Show the raw feed buffer of a feed.


** org-feed-skip-http-headers =buffer=

Remove HTTP headers from =buffer=, and return it.
Assumes headers are indeed present!


** org-feed-update =feed &optional retrieve-only=

Get inbox items from =feed=.
=feed= can be a string with an association in /org-feed-alist/, or
it can be a list structured like an entry in /org-feed-alist/.


** org-feed-update-all  

Get inbox items from all feeds in /org-feed-alist/.


** org-feed-write-status =pos drawer status=

Write the feed =status= to =drawer= in entry at =pos=.
