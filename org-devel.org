#+OPTIONS:    H:3 num:nil toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t TeX:t LaTeX:t skip:nil d:(HIDE) tags:not-in-toc
#+STARTUP:    align fold nodlcheck hidestars oddeven lognotestate
#+SEQ_TODO:   TODO(t) INPROGRESS(i) WAITING(w@) | DONE(d) CANCELED(c@)
#+TAGS:       Write(w) Update(u) Fix(f) Check(c) 
#+TITLE:      Ongoing Development of Org Additions?
#+AUTHOR:     Worg people
#+EMAIL:      bzg AT altern DOT org
#+LANGUAGE:   en
#+PRIORITIES: A C B
#+CATEGORY:   worg

# This file is the default header for new Org files in Worg.  Feel free
# to tailor it to your needs.

[[file:index.org][{Back to Worg's index}]]

* Current Projects
Some org-mode related project currently being developed in worg.


** Org Collector
Located in [[file:elisp/org-collector.el]].

A utility for collecting properties from the headers in an org file,
running the properties through arbitrary elisp functions, and
presenting the results in a table.

The functionality of this tool is similar to the functionality of
[[info:org:Capturing%20column%20view][info:org:Capturing column view]], but this has support for processing
prior to the generation of the table.

Here is a simple example application of this utility.

#+begin_comment ems better example
it might be better to put an exercise example here if someone has one.
#+end_comment

#+BEGIN: propview :id "data" :cols (ITEM f d list (apply '* list) (+ f d))
| "ITEM" | "f" | "d" | "list"                  | "(apply (quote *) list)" | "(+ f d)" |
|--------+-----+-----+-------------------------+--------------------------+-----------|
| "run1" |   2 |  33 | (quote (9 2 3 4 5 6 7)) | 45360                    |        35 |
| "run2" |   4 |  34 | :na                     | :na                      |        38 |
| "run3" |   4 |  35 | :na                     | :na                      |        39 |
| "run4" |   2 |  36 | :na                     | :na                      |        38 |
|        |     |     |                         |                          |           |
#+END:

*** Example Data
      :PROPERTIES:
      :ID:       data
      :END:

****** run1
      :PROPERTIES:
      :d: 33
      :f: 2
      :list: '(9 2 3 4 5 6 7)
      :END:


****** run2
      :PROPERTIES:
      :d: 34
      :f: 4
      :END:


****** run3
      :PROPERTIES:
      :d: 35
      :f: 4
      :END:


****** run4
      :PROPERTIES:
      :d: 36
      :f: 2
      :END:
